// src/components/HUD.tsx
import { useCallback, useEffect, useRef, useState } from 'react';
import TopSheet from './sheets/TopSheet';
import TopicsPanel from './panels/TopicsPanel';
import AddCourseSheet from './panels/AddCourseSheet';
import { apiUser, apiUserCourses, type Course } from '../lib/api';

export default function HUD() {
  const anchorRef = useRef<HTMLDivElement>(null);

  const [courseTitle, setCourseTitle] = useState('–ö—É—Ä—Å');
  const [streak, setStreak] = useState(0);
  const [energy, setEnergy] = useState(25);

  // –∫–∞–∫–∞—è –≤–µ—Ä—Ö–Ω—è—è —à—Ç–æ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞
  const [open, setOpen] = useState<'course' | 'streak' | 'energy' | null>(null);

  // –Ω–∏–∂–Ω—è—è —à—Ç–æ—Ä–∫–∞ ¬´–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å¬ª
  const [addOpen, setAddOpen] = useState(false);

  const loadUserSnapshot = useCallback(async () => {
    // 1) —é–∑–µ—Ä: —Å—Ç—Ä–∏–∫ + —ç–Ω–µ—Ä–≥–∏—è
    const u = await apiUser();
    if (u) {
      setStreak(typeof u.streak === 'number' ? u.streak : 0);
      setEnergy(typeof u.energy === 'number' ? Math.max(0, Math.min(25, u.energy)) : 25);
    }

    // 2) –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞
    const list = await apiUserCourses(); // –∫—É—Ä—Å—ã –∏–∑ users.added_courses_id
    const storedId = (() => {
      try { const v = localStorage.getItem('exampli:activeCourseId'); return v ? Number(v) : null; } catch { return null; }
    })();
    const activeId = storedId ?? u?.current_course_id ?? (list[0]?.id ?? null);

    if (activeId && list.length) {
      const found = list.find(c => c.id === activeId) || list[0];
      setCourseTitle(found.title);
    } else {
      setCourseTitle('–ö—É—Ä—Å');
    }
  }, []);

  useEffect(() => {
    let alive = true;
    const refresh = async () => { if (alive) await loadUserSnapshot(); };

    refresh();

    const onCourseChanged = (evt: Event) => {
      const e = evt as CustomEvent<{ id?: number; title?: string; code?: string }>;
      if (e.detail?.title) setCourseTitle(e.detail.title);
      refresh();
    };

    const onVisible = () => { if (!document.hidden) refresh(); };

    window.addEventListener('exampli:courseChanged', onCourseChanged as EventListener);
    document.addEventListener('visibilitychange', onVisible);

    return () => {
      alive = false;
      window.removeEventListener('exampli:courseChanged', onCourseChanged as EventListener);
      document.removeEventListener('visibilitychange', onVisible);
    };
  }, [loadUserSnapshot]);

  // –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ: –∑–∞–∫—Ä—ã—Ç—å TopSheet ‚Üí –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–∞–¥—Ä –æ—Ç–∫—Ä—ã—Ç—å AddCourseSheet
  const openAddCourse = () => {
    setOpen(null);
    requestAnimationFrame(() => setAddOpen(true));
  };

  // –ø–æ–¥–ø–∏–Ω—ã–≤–∞–µ–º –ø–ª–∞–≤–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–±–∞–Ω–Ω–µ—Ä) –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é
  useEffect(() => {
    window.dispatchEvent(new Event('exampli:overlayToggled'));
  }, [addOpen, open]);

  return (
    <div className="hud-fixed bg-[color:var(--bg)]/90 backdrop-blur border-b border-white/5">
      <div ref={anchorRef} className="max-w-xl mx-auto px-5 py-2">
        <div className="flex items-center justify-between">
          {/* –ö—É—Ä—Å */}
          <button
            type="button"
            onClick={(e) => { e.preventDefault(); e.stopPropagation(); setOpen('course'); }}
            className="badge"
            aria-label="–í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É"
          >
            <span className="text-lg">üß©</span>
            <span className="truncate max-w-[180px]">{courseTitle}</span>
          </button>

          {/* –°—Ç–∞—Ç—É—Å—ã */}
          <div className="flex items-center gap-2">
            <button
              type="button"
              onClick={(e) => { e.preventDefault(); e.stopPropagation(); setOpen('streak'); }}
              className="badge" aria-label="–°—Ç—Ä–∏–∫"
            >
              <img src="/stickers/fire.svg" alt="" aria-hidden className="w-4 h-4" />
              {streak}
            </button>
            <button
              type="button"
              onClick={(e) => { e.preventDefault(); e.stopPropagation(); setOpen('energy'); }}
              className="badge" aria-label="–≠–Ω–µ—Ä–≥–∏—è"
            >
              <img src="/stickers/lightning.svg" alt="" aria-hidden className="w-4 h-4" />
              {energy}
            </button>
          </div>
        </div>
      </div>

      {/* –í–ï–†–•–ù–Ø–Ø –®–¢–û–†–ö–ê: –≤—ã–±–æ—Ä —Ç–µ–º/–ø–æ–¥—Ç–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞ */}
      <TopSheet open={open === 'course'} onClose={() => setOpen(null)} anchor={anchorRef} title="–¢–µ–º—ã">
        {/* –ù–æ–≤—ã–π TopicsPanel –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–º—ã ‚Üí —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è –ø–æ–¥—Ç–µ–º—ã.
            –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–ø—Å–æ–≤ onPicked/onAddClick –Ω–µ –Ω—É–∂–Ω–æ. */}
        <TopicsPanel open onClose={() => setOpen(null)} />
        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ ‚Äî –Ω–∏–∂–µ, –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π */}
        <div className="mt-3">
          <button type="button" className="btn-outline w-full" onClick={openAddCourse}>
            + –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å
          </button>
        </div>
      </TopSheet>

      {/* –í–ï–†–•–ù–Ø–Ø –®–¢–û–†–ö–ê: —Å—Ç—Ä–∏–∫ */}
      <TopSheet open={open === 'streak'} onClose={() => setOpen(null)} anchor={anchorRef} title="–°—Ç—Ä–∏–∫">
        <StreakSheetBody />
      </TopSheet>

      {/* –í–ï–†–•–ù–Ø–Ø –®–¢–û–†–ö–ê: —ç–Ω–µ—Ä–≥–∏—è */}
      <TopSheet open={open === 'energy'} onClose={() => setOpen(null)} anchor={anchorRef} title="–≠–Ω–µ—Ä–≥–∏—è">
        <EnergySheetBody value={energy} onOpenSubscription={() => { setOpen(null); location.assign('/subscription'); }} />
      </TopSheet>

      {/* –ù–ò–ñ–ù–Ø–Ø –®–¢–û–†–ö–ê: ¬´–î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å¬ª ‚Äî –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç HUD –∏ —ç–∫—Ä–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é */}
      <AddCourseSheet
        open={addOpen}
        onClose={() => setAddOpen(false)}
        onAdded={(c: Course) => {
          setCourseTitle(c.title);
          // —Å–æ—Ö—Ä–∞–Ω–∏–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –≤ LS
          try { localStorage.setItem('exampli:activeCourseId', String(c.id)); } catch {}
          window.dispatchEvent(new CustomEvent('exampli:courseChanged', { detail: { id: c.id, title: c.title, code: c.code } }));
          setAddOpen(false);
        }}
      />
    </div>
  );
}

/* ================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ ================== */

import { apiUser as apiUserForSheets } from '../lib/api';

function StreakSheetBody() {
  const [streak, setStreak] = useState(0);
  useEffect(() => {
    (async () => {
      const u = await apiUserForSheets();
      setStreak(typeof u?.streak === 'number' ? u.streak : 0);
    })();
  }, []);
  const days = Array.from({ length: 30 }, (_, i) => i + 1);
  return (
    <>
      <div className="card">
        <div className="text-3xl font-bold">üî• {streak}</div>
        <div className="text-sm text-muted">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
      </div>
      <div className="grid grid-cols-7 gap-2 mt-4">
        {days.map((d) => (
          <div
            key={d}
            className={`h-9 rounded-xl flex items-center justify-center text-sm border ${
              d <= streak ? 'bg-white/10 border-white/10' : 'border-white/5'
            }`}
          >
            {d}
          </div>
        ))}
      </div>
    </>
  );
}

function EnergySheetBody({ value, onOpenSubscription }: { value: number; onOpenSubscription: () => void }) {
  const percent = Math.max(0, Math.min(100, Math.round((value / 25) * 100)));
  return (
    <>
      <div className="progress"><div style={{ width: `${percent}%` }} /></div>
      <div className="mt-2 text-sm text-muted">{value}/25</div>
      <div className="grid gap-3 mt-5">
        <button type="button" className="card text-left" onClick={onOpenSubscription}>
          <div className="font-semibold">–ë–µ–∑–ª–∏–º–∏—Ç (–¥–µ–º–æ)</div>
          <div className="text-sm text-muted">–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å ¬´–ê–±–æ–Ω–µ–º–µ–Ω—Ç¬ª</div>
        </button>
        <button type="button" className="btn w-full" onClick={onOpenSubscription}>+ –ü–æ–ø–æ–ª–Ω–∏—Ç—å / –û—Ñ–æ—Ä–º–∏—Ç—å</button>
      </div>
    </>
  );
}
